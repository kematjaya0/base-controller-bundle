{% block auto_complete_entity_widget %}
    <style>
        .loader {
            width: 2rem;
            background-color: #FFF;
            background-repeat: no-repeat;
            z-index: 10;
            margin-top: -1.5em;
            float: right;
            margin-right: 0.5rem;
        }
    </style>
    <input type="hidden" name="{{ full_name }}" id="{{ id }}" value="{{ data }}"/>
    <input type="text" id="auto_complete_{{ name }}" value="{{ label_data }}" {{ html_attributes|raw }} />
    <div id="icon-container-{{ name }}" style="display: none">
      <img class="loader" src="{{ asset('bundles/basecontroller/images/loading.gif') }}"></i>
    </div>
    {{- block('auto_complete_javascript') -}}
    
{% endblock %}

{% block auto_complete_javascript %}
    <script>
    $(function () {
        var {{ name }} = [];
        var parentDOM = null;
        if ($(".modal").length > 0) {
            parentDOM = ($(".modal").find('#auto_complete_{{ name }}').length > 0) ? "#" + $(".modal").attr("id") : null;
        }
        
        $('#auto_complete_{{ name }}').autocomplete({
            change: function (event, ui) {
                if (this.value.length <= 0) {
                    return;
                }
                let value = this.value;
                let selected = $.grep({{ name }}, function (i) {
                    return i.label === value;
                }); 
                
                if (selected.length <= 0) {
                    return;
                }
                
                $("#{{ id }}").val(selected[0].id);
                
            },
            source: function (request, response) {
                let dom = $(this.element[0]);
                $("#icon-container-{{ name }}").attr("style", "display: contents");
                $.ajax({
                    url: '{{ url }}',
                    data: { query: request.term },
                    success: function (data) {
                        {{ name }} = data;
                        $("#icon-container-{{ name }}").attr("style", "display: none");
                        response(data);
                    },
                    error: function () {
                        response([]);
                    }
                });
            },
            appendTo: parentDOM
        });
    });
        
    </script>
{% endblock %}